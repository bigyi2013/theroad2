import numpy as np
import cv2
from homography import homography
def draw(corners, obj,num):
    filename = 'Image11.tif'
    img = cv2.imread(filename)
    ua = corners[num][0]
    va = corners[num][1]
    print(obj[num])
    print(ua, va)
    cv2.circle(img, (int(ua), int(va)), 5, (0, 0, 255,), -1)
    cv2.imshow('img', img)
    key = cv2.waitKey(0)
    return
def getcorandobj():
    a=np.array([486.422994725985,480.287054589047,474.327429529373,468.541756586905,462.786121040631,457.169110838028,451.315734136350,445.867017784356,440.521300607471,435.347663906831,430.217693695304,425.242431103012,460.505444972045,454.774193646776,449.162743016253,443.755701715036,438.439561511979,432.970010581189,427.723534424012,422.359747555568,417.675855001104,412.651929427464,407.874064371235,403.249561134606,434.638776965227,429.307357632412,423.831255550020,418.839831894498,413.749240370697,409.094690003406,403.972245986378,399.043910884641,394.531471048694,390.178041510673,385.581652091807,381.440750911432,408.023875018318,403.182415582189,398.343279865508,393.474066995795,388.977370840068,384.334084823939,379.813351942725,375.299109000641,371.246844038697,366.905327128248,363.018734592532,358.922523564033,381.645599961687,376.877295559213,372.425463880250,368.118791663762,363.791323728433,359.726138747027,355.443165588458,351.539324072042,347.688239367736,343.916800840814,340.229539632889,336.883295201607,354.701088023550,350.564497326151,346.500955213005,342.409258424558,338.673994039213,334.741998382668,331.050724040083,327.377001376396,324.163174006735,320.635652935740,317.512921706865,314.288869944798,327.722890856056,323.860982187756,320.219507348577,316.581997458567,313.172021830089,309.868236322965,306.435275771929,303.338407676210,300.213745870224,297.501174229068,294.510981377486,292.044497858449,300.767204622460,297.416352573601,294.092024255549,290.701418463570,287.766713324432,284.856086993271,282.092579292433,279.170329316690,276.389581024869,273.997152857350,271.715538451909,269.332593144987,273.810123141407,270.684456906594,267.767743138273,265.054001301259,262.360114743842,259.963741834561,257.400737991999,255.134795888383,252.553486233570,250.800236155401,248.716975960413,246.882214948685,246.859884005091,244.370456019891,241.711193544499,239.437173164501,237.257527396993,235.097534929198,232.981873972612,230.902653212628,229.223827265715,227.493834109075,225.957337891574,224.357507714557,220.173327708479,217.705026615483,215.698362883911,213.827377424178,211.730652075139,210.352638181816,208.550765883263,207.198006278267,205.549654142777,204.431049153397,203.124284748670,202.231543047175,193.587648551919,191.819206555052,190.094231313320,188.505202077582,187.002629654554,185.714026300471,184.494288317188,183.326723956120,182.441429685396,181.437558883813,180.698809287345,179.855485928279,167.445999149382,165.909999640434,164.597875909916,163.476408131713,162.281947086448,161.600547878414,160.493351126719,159.795812565575,159.016633094812,158.621271968732,158.250295082201,157.930388689368])
    b=np.array([76.1853986548369,101.687876015330,126.239001513313,150.163632790707,173.241840271684,195.934285521698,217.693732448083,238.951114887902,259.484483058175,279.323520555262,298.466414638679,317.015700565541,71.9495527056337,97.0940380440011,122.121786200687,146.081635863694,169.550275342043,192.243464835980,214.345666038358,235.702467659638,256.241771238256,276.279097490545,295.668440821491,314.209432981642,67.1458832351009,93.1176754832332,117.887976045049,142.240291588102,165.726201988285,188.716268858531,210.942525804093,232.399626352125,253.211030075112,273.393675491002,292.675383383738,311.549503843957,63.0677139207300,88.7271665246553,114.080237101051,138.388386522628,162.121626310419,185.096981112309,207.571483445593,229.102757796969,250.050064669721,270.089665608623,289.777471117513,308.531981767910,58.7043087360873,84.7786280641827,110.064089402563,134.618689250860,158.410525694723,181.576114380608,203.988159491808,225.757770967054,246.706689863741,267.224241316950,286.636530964750,305.748854942019,54.7693768022155,80.7669196997787,106.258318748818,130.765777351354,154.792421128961,178.085203507391,200.579436943993,222.433874665430,243.568728228839,263.882474900213,283.669862095570,302.640715566364,50.6941120588031,77.0454003991498,102.457567268216,127.220833848919,151.279585585629,174.590667951803,197.242268505506,219.211926110538,240.315504474025,260.757760877661,280.478774097970,299.726350398875,47.1141036095350,73.2436421924940,98.8911699098851,123.619171630419,147.752080732994,171.172551309813,193.807672941132,215.827511035535,237.120040050340,257.642704196087,277.500243329934,296.603826386960,43.5063467970802,69.7755442891114,95.4151631481639,120.235023379419,144.369485856606,167.777048273077,190.441392951861,212.433241529405,233.859667636720,254.391374960281,274.308177965919,293.641240330991,40.1713374795631,66.4949770298105,92.0003157511088,116.864314074867,141.086706302886,164.487496618669,187.253212488871,209.270016027208,230.535019623246,251.213177585080,271.289835560976,290.411415747936,36.9109283133138,63.1846163261375,88.7576660890580,113.582867919192,137.694673698898,161.164995986203,183.913359885238,205.841185891642,227.340477462014,247.954622832005,267.955623117563,287.393988188306,33.7364844915461,60.1699206100971,85.6052113352693,110.477523986859,134.543761978530,158.016575376125,180.668478560113,202.632159982550,224.110245375952,244.659547529541,264.678061979795,283.968157540243,31.0988840038259,57.1194164523855,82.7471954255586,107.457413316383,131.433911766335,154.781923009867,177.560509596991,199.523333818882,220.922465896203,241.545354595392,261.588296295575,280.947841645857])
    c=np.array([0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330,0,30,60,90,120,150,180,210,240,270,300,330])
    d=np.array([360,360,360,360,360,360,360,360,360,360,360,360,330,330,330,330,330,330,330,330,330,330,330,330,300,300,300,300,300,300,300,300,300,300,300,300,270,270,270,270,270,270,270,270,270,270,270,270,240,240,240,240,240,240,240,240,240,240,240,240,210,210,210,210,210,210,210,210,210,210,210,210,180,180,180,180,180,180,180,180,180,180,180,180,150,150,150,150,150,150,150,150,150,150,150,150,120,120,120,120,120,120,120,120,120,120,120,120,90,90,90,90,90,90,90,90,90,90,90,90,60,60,60,60,60,60,60,60,60,60,60,60,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,0,0,0,0,0,0,0])
    for i in range(156):
        if i==0:
            x=np.array([a[i],b[i]])
        else:
            x1 = np.array((a[i], b[i]))
            x=np.vstack((x,x1))
    for i in range(156):
        if i==0:
            x2=np.array([c[i],d[i]])
        else:
            x1 = np.array((c[i], d[i]))
            x2=np.vstack((x2,x1))
    return x,x2

a,b=getcorandobj()
# for i in range(156):
#     draw(a,b,i)
h=homography(a,b)
print(h/h[8])